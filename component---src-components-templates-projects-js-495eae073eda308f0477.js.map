{"version":3,"sources":["webpack:///./src/components/shared/layouts/GridLayout.jsx","webpack:///./src/components/ProjectsPage/ProjectsList/ProjectsListItem.jsx","webpack:///./src/components/ProjectsPage/ProjectsList/ProjectList.jsx","webpack:///./src/components/ProjectsPage/ProjectsList/index.jsx","webpack:///./src/components/ProjectsPage/ProjectsPage.jsx","webpack:///./src/components/ProjectsPage/index.jsx","webpack:///./src/components/templates/projects.js","webpack:///./src/components/helpers/markdown.js","webpack:///./src/components/shared/Metadata/Metadata.jsx","webpack:///./src/components/shared/Metadata/index.jsx","webpack:///./src/components/helpers/siteMetadata.js","webpack:///./src/components/helpers/renderListItems.jsx","webpack:///./src/components/shared/Page/index.jsx","webpack:///./src/components/shared/titles/TitleSecondary.jsx"],"names":["layouts_GridLayout","styled_components_browser_es","default","div","withConfig","displayName","flexHorizontal","a","uiList","Object","lib","api","width","marginBottom","scope","_templateObject","Title","TitleSecondary","ImgLayout","Layout","BaseLink","linkProps","scaleBounce","ProjectsListItem_ProjectsListItem","_ref","project","react_default","createElement","to","markdown","VLayout","spacing","gatsby_image_default","fluid","g","c","propTypes","prop_types_default","object","isRequired","ProjectsList_ProjectsListItem","_","ProjectList_Layout","withComponent","ProjectList_ProjectList","projects","renderListItems","array","ProjectsList","x","ProjectsPage_ProjectsPage","data","Page","title","formatting","d","siteMetadata","j","Metadata","i","l","components_ProjectsPage","M","n","t","A","__webpack_exports__","S","query","lMarkdownItem","ramda__WEBPACK_IMPORTED_MODULE_0__","lensProp","lMarkdownItems","lensPath","lFrontmatter","lFields","lTitle","lType","lDate","lCategory","lAuthor","lTimeToRead","lWordCount","lWords","lSlug","lTags","lHtmlAst","lMetadata","lNext","lPrevious","lMarkdownItemFields","compose","lMarkdownItemMetadata","lMarkdownItemFrontmatter","lMarkdownItemTitle","lImageSizes","markdownItem","view","markdownItemNodes","pluck","markdownItemMetadata","markdownItemTitle","markdownItemHTMLAst","timeToRead","wordCount","markdownItemImageSizes","frontmatterImageSizes","frontmatterDate","frontmatterAuthor","frontmatterCategory","fieldsTitle","fieldsSlug","fieldsTags","next","previous","Metadata_Metadata","description","keywords","Helmet_default","meta","name","content","string","defaultProps","shared_Metadata_Metadata","s","324","e","b","p","O","f","m","v","w","h","lSiteMetadata","lStructure","lPageMetadata","pageMetadata","pageTitle","resourceTitle","homePageTitle","aboutPageTitle","FourOhFourPageTitle","articlesResourceTitle","projectsResourceTitle","homePageMetadata","aboutPageMetadata","articlesPageMetadata","projectsPageMetadata","tagPageMetadata","categoryPageMetadata","Component","dataProp","ramda_adjunct__WEBPACK_IMPORTED_MODULE_0__","dataItem","key","_props","props","react__WEBPACK_IMPORTED_MODULE_1___default","_Page__WEBPACK_IMPORTED_MODULE_0__","343","r","o","h2","cssapi__WEBPACK_IMPORTED_MODULE_1__","baseline"],"mappings":"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","file":"component---src-components-templates-projects-js-495eae073eda308f0477.js","sourcesContent":["import { api, scope } from 'cssapi'\nimport styled from 'styled-components'\nimport flexHorizontal from '../../styles/mixins/flexHorizontal'\nimport uiList from '../../styles/mixins/uiList'\n\nconst GridLayout = styled.div`\n  ${flexHorizontal};\n  ${uiList};\n  flex-wrap: wrap;\n  justify-content: space-around;\n\n  & > * {\n    ${api({\n      width: [`100%`, `calc(50% - (2ru / 2))`, `calc(33.333333% - (2ru / 3))`],\n      marginBottom: scope`1ru`,\n    })};\n  }\n`\n\nexport default GridLayout\n","import Img from 'gatsby-image'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {\n  fieldsSlug,\n  fieldsTitle,\n  frontmatterImageSizes,\n} from '../../helpers/markdown'\nimport VLayout from '../../shared/layouts/VLayout'\nimport BaseLink from '../../shared/links/BaseLink'\nimport TitleSecondary from '../../shared/titles/TitleSecondary'\nimport scaleBounce from '../../styles/animations/scaleBounce'\nimport linkProps from '../../styles/mixins/linkProps'\n\nconst Title = styled(TitleSecondary)`\n  text-align: center;\n  position: relative;\n  font-weight: bold;\n`\n\nconst ImgLayout = styled.div``\n\nconst Layout = styled(BaseLink)`\n  position: relative;\n  display: block;\n  ${linkProps(`c:text`, `c:highlight`)};\n\n  html.feat-no-touchevents &:hover {\n    animation: ${scaleBounce(1.05, 0.97)} 0.3s ease-in-out;\n  }\n`\nconst ProjectsListItem = ({ project }) => (\n  <Layout to={fieldsSlug(project)}>\n    <VLayout spacing=\"small\">\n      <ImgLayout>\n        <Img fluid={frontmatterImageSizes(project)} />\n      </ImgLayout>\n      <Title>{fieldsTitle(project)}</Title>\n    </VLayout>\n  </Layout>\n)\n\nProjectsListItem.propTypes = {\n  project: PropTypes.object.isRequired,\n}\n\nexport default ProjectsListItem\n","// -----------------------------------------------------------------------------\n// Articles List > View\n// -----------------------------------------------------------------------------\n\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport renderListItems from '../../helpers/renderListItems'\nimport GridLayout from '../../shared/layouts/GridLayout'\nimport ProjectsListItem from './ProjectsListItem'\n\nconst Layout = GridLayout.withComponent(`ul`)\n\nconst ProjectList = ({ projects }) => (\n  <Layout>{renderListItems(ProjectsListItem, `project`, projects)}</Layout>\n)\n\nProjectList.propTypes = {\n  projects: PropTypes.array.isRequired,\n}\n\nexport default ProjectList\n","import ProjectList from './ProjectList';\n\nexport default ProjectList;\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { pluralise } from '../helpers/formatting'\nimport { markdownItemNodes } from '../helpers/markdown'\nimport {\n  projectsPageMetadata,\n  projectsResourceTitle,\n} from '../helpers/siteMetadata'\nimport Metadata from '../shared/Metadata'\nimport Page from '../shared/Page'\nimport ProjectsList from './ProjectsList'\n\nconst ProjectsPage = ({ data }) => (\n  <Page title={pluralise(projectsResourceTitle(data))}>\n    <Metadata {...projectsPageMetadata(data)} />\n    <ProjectsList projects={markdownItemNodes(data)} />\n  </Page>\n)\n\nProjectsPage.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport default ProjectsPage\n","import ProjectsPage from './ProjectsPage';\n\nexport default ProjectsPage;\n","import { graphql } from 'gatsby'\nimport Template from '../ProjectsPage'\n\nexport default Template\n\nexport const query = graphql`\n  query ProjectsQuery($dateFormat: String) {\n    site {\n      siteMetadata {\n        metadata {\n          projects {\n            title\n            description\n            keywords\n          }\n        }\n        structure {\n          resources {\n            projects {\n              title\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      filter: { fields: { type: { eq: \"project\" } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            date(formatString: $dateFormat)\n            keywords\n            image {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            title\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import { compose, lensPath, lensProp, pluck, view } from 'ramda'\n\n// -----------------------------------------------------------------------------\n// Lenses\n// -----------------------------------------------------------------------------\n\nconst lMarkdownItem = lensProp(`markdownRemark`)\nconst lMarkdownItems = lensPath([`allMarkdownRemark`, `edges`])\nconst lFrontmatter = lensProp(`frontmatter`)\nconst lFields = lensProp(`fields`)\nconst lTitle = lensProp(`title`)\nconst lType = lensProp(`type`)\nconst lDate = lensProp(`date`)\nconst lCategory = lensProp(`category`)\nconst lAuthor = lensProp(`author`)\nconst lTimeToRead = lensProp(`timeToRead`)\nconst lWordCount = lensProp(`wordCount`)\nconst lWords = lensProp(`words`)\nconst lSlug = lensProp(`slug`)\nconst lTags = lensProp(`tags`)\nconst lHtmlAst = lensProp(`htmlAst`)\nconst lMetadata = lensProp(`metadata`)\nconst lNext = lensProp(`next`)\nconst lPrevious = lensProp(`previous`)\nconst lMarkdownItemFields = compose(\n  lMarkdownItem,\n  lFields\n)\nconst lMarkdownItemMetadata = compose(\n  lMarkdownItemFields,\n  lMetadata\n)\nconst lMarkdownItemFrontmatter = compose(\n  lMarkdownItem,\n  lFrontmatter\n)\nconst lMarkdownItemTitle = compose(\n  lMarkdownItemFields,\n  lTitle\n)\nconst lImageSizes = lensPath([`image`, `childImageSharp`, `fluid`])\n\n// -----------------------------------------------------------------------------\n// Views\n// -----------------------------------------------------------------------------\n\n// Item\nexport const markdownItem = view(lMarkdownItem)\nexport const markdownItems = view(lMarkdownItems)\nexport const markdownItemNodes = compose(\n  pluck(`node`),\n  view(lMarkdownItems)\n)\nexport const markdownItemFrontmatter = view(lMarkdownItemFrontmatter)\nexport const markdownItemMetadata = view(lMarkdownItemMetadata)\nexport const markdownItemTitle = view(lMarkdownItemTitle)\nexport const markdownItemHTMLAst = view(\n  compose(\n    lMarkdownItem,\n    lHtmlAst\n  )\n)\n\n// Item Fields\nexport const timeToRead = view(lTimeToRead)\nexport const wordCount = view(\n  compose(\n    lWordCount,\n    lWords\n  )\n)\n\n// Frontmatter\nexport const markdownItemImageSizes = view(\n  compose(\n    lMarkdownItemFrontmatter,\n    lImageSizes\n  )\n)\nexport const frontmatterImageSizes = view(\n  compose(\n    lFrontmatter,\n    lImageSizes\n  )\n)\nexport const frontmatterDate = view(\n  compose(\n    lFields,\n    lDate\n  )\n)\nexport const frontmatterAuthor = view(\n  compose(\n    lFields,\n    lAuthor\n  )\n)\nexport const frontmatterCategory = view(\n  compose(\n    lFields,\n    lCategory\n  )\n)\n// Fields\nexport const fieldsTitle = view(\n  compose(\n    lFields,\n    lTitle\n  )\n)\nexport const fieldsSlug = view(\n  compose(\n    lFields,\n    lSlug\n  )\n)\nexport const fieldsType = view(\n  compose(\n    lFields,\n    lType\n  )\n)\nexport const fieldsTags = view(\n  compose(\n    lFields,\n    lTags\n  )\n)\nexport const next = view(lNext)\nexport const previous = view(lPrevious)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\n\nconst Metadata = ({ title, description, keywords }) => (\n  <Helmet\n    title={title}\n    meta={[\n      {\n        name: `description`,\n        content: description,\n      },\n      {\n        name: `keywords`,\n        content: keywords,\n      },\n    ]}\n  />\n)\n\nMetadata.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  keywords: PropTypes.string,\n}\n\nMetadata.defaultProps = {\n  keywords: ``,\n}\n\nexport default Metadata\n","import Metadata from './Metadata';\n\nexport default Metadata;\n","import { compose, lensPath, lensProp, view } from 'ramda'\n\n// -----------------------------------------------------------------------------\n// Lenses\n// -----------------------------------------------------------------------------\n\nconst lSiteMetadata = lensPath([`site`, `siteMetadata`])\nconst lStructure = lensPath([`structure`])\nconst lPageMetadata = compose(\n  lSiteMetadata,\n  lensPath([`metadata`])\n)\nconst lPageTitleForPage = name =>\n  compose(\n    lSiteMetadata,\n    lStructure,\n    lensPath([`pages`, name, `title`])\n  )\nconst lPageTitleForResource = name =>\n  compose(\n    lSiteMetadata,\n    lStructure,\n    lensPath([`resources`, name, `title`])\n  )\nexport const pageMetadata = name =>\n  view(\n    compose(\n      lPageMetadata,\n      lensProp(name)\n    )\n  )\n\n// -----------------------------------------------------------------------------\n// Views\n// -----------------------------------------------------------------------------\n\nconst pageTitle = name => view(lPageTitleForPage(name))\nconst resourceTitle = name => view(lPageTitleForResource(name))\n\n// -----------------------------------------------------------------------------\n// Helpers\n// -----------------------------------------------------------------------------\n\nexport const homePageTitle = pageTitle(`home`)\nexport const aboutPageTitle = pageTitle(`about`)\nexport const FourOhFourPageTitle = pageTitle(`notFound`)\nexport const articlesResourceTitle = resourceTitle(`articles`)\nexport const projectsResourceTitle = resourceTitle(`projects`)\nexport const tagsResourceTitle = resourceTitle(`tags`)\n\nexport const homePageMetadata = pageMetadata(`home`)\nexport const aboutPageMetadata = pageMetadata(`about`)\nexport const articlesPageMetadata = pageMetadata(`articles`)\nexport const projectsPageMetadata = pageMetadata(`projects`)\nexport const tagPageMetadata = pageMetadata(`tag`)\nexport const categoryPageMetadata = pageMetadata(`category`)\n","import { mapIndexed } from 'ramda-adjunct'\nimport React from 'react'\n\nconst renderListItems = (Component, dataProp, data) =>\n  mapIndexed((dataItem, key) => {\n    const props = {\n      [dataProp]: dataItem,\n    }\n    return (\n      <li key={key}>\n        <Component {...props} />\n      </li>\n    )\n  }, data)\n\nexport default renderListItems\n","import Page from './Page';\n\nexport default Page;\n","import { api, scope } from 'cssapi'\nimport styled from 'styled-components'\n\nconst TitleSecondary = styled.h2`\n  ${api({\n    baseline: scope`s:secondaryTitle`,\n  })};\n`\n\nexport default TitleSecondary\n"],"sourceRoot":""}